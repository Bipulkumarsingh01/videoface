{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BipulSingh\\\\Desktop\\\\videoface\\\\video-processing-app\\\\src\\\\main\\\\index.js\",\n  _s = $RefreshSig$();\n// src/main/index.js\nimport React, { useState } from \"react\";\nimport { Button, CircularProgress, Container, Typography, Paper } from \"@mui/material\";\nimport \"./style.css\"; // Import your styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [downloadMessage, setDownloadMessage] = useState(\"\");\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a video file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"video\", selectedFile);\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/process_video\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setProcessedVideo(data.output_path);\n      setDownloadMessage(\"\");\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n      alert(\"Error uploading video. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // const handleDownload = async () => {\n  //   if (processedVideo) {\n  //     try {\n  //       const response = await fetch(`http://localhost:5000/download`); // Replace this line\n  //       const message = await response.text();\n  //       setDownloadMessage(message);\n  //     } catch (error) {\n  //       console.error(\"Error downloading video:\", error);\n  //       alert(\"Error downloading video. Please try again.\");\n  //     }\n  //   } else {\n  //     alert(\"No processed video available for download.\");\n  //   }\n  // };\n\n  const handleDownload = async () => {\n    if (processedVideo) {\n      try {\n        const response = await fetch(`http://localhost:5000/download`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        // Create a Blob from the response\n        const blob = await response.blob();\n\n        // Create a link element and click it to trigger the download\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = \"processed_video.mp4\";\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        setDownloadMessage(\"Download successful!\");\n      } catch (error) {\n        console.error(\"Error downloading video:\", error);\n        alert(\"Error downloading video. Please try again.\");\n      }\n    } else {\n      alert(\"No processed video available for download.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Bigbuddy AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"videoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: \"progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), processedVideo && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          className: \"videoPlayer\",\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: processedVideo,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), downloadMessage && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          className: \"downloadMessage\",\n          children: downloadMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"downloadButton\",\n          onClick: handleDownload,\n          children: \"Download Processed Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8Lx9739jYhFuC9oEZG0ldMbD9M0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","CircularProgress","Container","Typography","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedFile","setSelectedFile","processedVideo","setProcessedVideo","loading","setLoading","downloadMessage","setDownloadMessage","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","data","json","output_path","error","console","handleDownload","ok","Error","status","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","removeChild","className","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","color","onClick","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/BipulSingh/Desktop/videoface/video-processing-app/src/main/index.js"],"sourcesContent":["// src/main/index.js\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n} from \"@mui/material\";\r\n\r\nimport \"./style.css\"; // Import your styles\r\n\r\nconst App = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [processedVideo, setProcessedVideo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [downloadMessage, setDownloadMessage] = useState(\"\");\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert(\"Please select a video file.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"video\", selectedFile);\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/process_video\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      setProcessedVideo(data.output_path);\r\n      setDownloadMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading video:\", error);\r\n      alert(\"Error uploading video. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // const handleDownload = async () => {\r\n  //   if (processedVideo) {\r\n  //     try {\r\n  //       const response = await fetch(`http://localhost:5000/download`); // Replace this line\r\n  //       const message = await response.text();\r\n  //       setDownloadMessage(message);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error downloading video:\", error);\r\n  //       alert(\"Error downloading video. Please try again.\");\r\n  //     }\r\n  //   } else {\r\n  //     alert(\"No processed video available for download.\");\r\n  //   }\r\n  // };\r\n\r\n  const handleDownload = async () => {\r\n    if (processedVideo) {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/download`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        // Create a Blob from the response\r\n        const blob = await response.blob();\r\n\r\n        // Create a link element and click it to trigger the download\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"processed_video.mp4\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n\r\n        setDownloadMessage(\"Download successful!\");\r\n      } catch (error) {\r\n        console.error(\"Error downloading video:\", error);\r\n        alert(\"Error downloading video. Please try again.\");\r\n      }\r\n    } else {\r\n      alert(\"No processed video available for download.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"container\">\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Bigbuddy AI\r\n      </Typography>\r\n      <Paper className=\"videoContainer\">\r\n        <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleUpload}>\r\n          Upload\r\n        </Button>\r\n        {loading && <CircularProgress className=\"progress\" />}\r\n\r\n        {processedVideo && (\r\n          <>\r\n            <video controls className=\"videoPlayer\">\r\n              <source src={processedVideo} type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n            {downloadMessage && (\r\n              <Typography variant=\"body1\" className=\"downloadMessage\">\r\n                {downloadMessage}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"downloadButton\"\r\n              onClick={handleDownload}\r\n            >\r\n              Download Processed Video\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}