{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BipulSingh\\\\Desktop\\\\videoface\\\\video-processing-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, CircularProgress, Container, Typography, makeStyles, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(4)\n  },\n  videoContainer: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  videoPlayer: {\n    width: '100%',\n    marginTop: theme.spacing(2)\n  },\n  downloadButton: {\n    marginTop: theme.spacing(2)\n  }\n}));\nconst App = () => {\n  _s();\n  const classes = useStyles();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a video file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setProcessedVideo(data.processed_video_path);\n    } catch (error) {\n      console.error('Error uploading video:', error);\n      alert('Error uploading video. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownload = () => {\n    // Implement download logic\n    // You may want to use the processedVideo link from the backend\n    // For simplicity, it assumes a direct download link\n    window.open(`http://localhost:5000/download/${processedVideo}`, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Video Processing App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.videoContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: classes.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), processedVideo && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          className: classes.videoPlayer,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: `http://localhost:5000/${processedVideo}`,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.downloadButton,\n          onClick: handleDownload,\n          children: \"Download Processed Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Zf0mQ/ZJKHflL//i5Wy2Ta7dECQ=\", false, function () {\n  return [useStyles];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","CircularProgress","Container","Typography","makeStyles","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","container","marginTop","spacing","videoContainer","display","flexDirection","alignItems","videoPlayer","width","downloadButton","App","_s","classes","selectedFile","setSelectedFile","processedVideo","setProcessedVideo","loading","setLoading","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","data","json","processed_video_path","error","console","handleDownload","window","open","className","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","color","onClick","progress","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/BipulSingh/Desktop/videoface/video-processing-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, CircularProgress, Container, Typography, makeStyles, Paper } from '@mui/material';\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(4),\n  },\n  videoContainer: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  videoPlayer: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n  },\n  downloadButton: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a video file.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await response.json();\n      setProcessedVideo(data.processed_video_path);\n    } catch (error) {\n      console.error('Error uploading video:', error);\n      alert('Error uploading video. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownload = () => {\n    // Implement download logic\n    // You may want to use the processedVideo link from the backend\n    // For simplicity, it assumes a direct download link\n    window.open(`http://localhost:5000/download/${processedVideo}`, '_blank');\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Video Processing App\n      </Typography>\n      <Paper className={classes.videoContainer}>\n        <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleUpload}>\n          Upload\n        </Button>\n        {loading && <CircularProgress className={classes.progress} />}\n        {processedVideo && (\n          <>\n            <video controls className={classes.videoPlayer}>\n              <source src={`http://localhost:5000/${processedVideo}`} type=\"video/mp4\" />\n              Your browser does not support the video tag.\n            </video>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.downloadButton}\n              onClick={handleDownload}\n            >\n              Download Processed Video\n            </Button>\n          </>\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}